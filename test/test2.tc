-- fibnacci type check
--     普通のFib(5x) -> 5y，つまり，
--     fib(5x+3) -> 5y の検査．

-- 入力5x+3の判定．
-- 2進んでいるので，Fib(5x)はfib(5x+3)に相当．
ndFibIn5amari3 = Nd (
  {q0,q1,q2,q3,q4,qe},
  {q3},
  {qe},
  {q0 -> a(q4,qe),
   q1 -> a(qe,qe),
   q1 -> a(q0,qe),
   q2 -> a(q1,qe),
   q3 -> a(q2,qe),
   q4 -> a(q3,qe)}
)

-- 出力5yの判定．
ndFibOut5amari0 = Nd (
  {q0,q1,q2,q3,q4},
  {q0},
  {q1},
  {q0 -> a(q0,q0), q0 -> a(q1,q4), q0 -> a(q2,q3), q0 -> a(q3,q2), q0 -> a(q4,q1),
   q1 -> a(q0,q1), q1 -> a(q1,q0), q1 -> a(q2,q4), q1 -> a(q3,q3), q1 -> a(q4,q2),
   q2 -> a(q0,q2), q2 -> a(q1,q1), q2 -> a(q2,q0), q2 -> a(q3,q4), q2 -> a(q4,q3),
   q3 -> a(q0,q3), q3 -> a(q1,q2), q3 -> a(q2,q1), q3 -> a(q3,q0), q3 -> a(q4,q4),
   q4 -> a(q0,q4), q4 -> a(q1,q3), q4 -> a(q2,q2), q4 -> a(q3,q1), q4 -> a(q4,q0)}
)

-- 出力5y+4の判定．
ndFibOut5amari4 = Nd (
  {q0,q1,q2,q3,q4},
  {q4},
  {q1},
  {q0 -> a(q0,q0), q0 -> a(q1,q4), q0 -> a(q2,q3), q0 -> a(q3,q2), q0 -> a(q4,q1),
   q1 -> a(q0,q1), q1 -> a(q1,q0), q1 -> a(q2,q4), q1 -> a(q3,q3), q1 -> a(q4,q2),
   q2 -> a(q0,q2), q2 -> a(q1,q1), q2 -> a(q2,q0), q2 -> a(q3,q4), q2 -> a(q4,q3),
   q3 -> a(q0,q3), q3 -> a(q1,q2), q3 -> a(q2,q1), q3 -> a(q3,q0), q3 -> a(q4,q4),
   q4 -> a(q0,q4), q4 -> a(q1,q3), q4 -> a(q2,q2), q4 -> a(q3,q1), q4 -> a(q4,q0)}
)

fibAlphabet = Alphabets {a}

-- fibnacci.
-- 入力はaの数，出力は#の数をカウント．
-- 普通のFib(0)=0に比べて2進んでいる．
--   fib(0) = 1,  fib(1) = 2
--   fib(2) = 3,  fib(3) = 5
--   fib(4) = 8,  fib(5) = 13
--   fib(6) = 21, fib(7) = 34
--   fib(8) = 55, fib(9) = 89
tdttFib = Tdtt (
  {fib, aux},
  {fib},
  {fib(a) -> a(fib(1),aux(1)),
   fib(#) -> #,
   aux(a) -> fib(1),
   aux(#) -> #}
)

-- fib(5x+3) -> 5y+4の検査
typecheck! fibAlphabet fibAlphabet ndFibIn5amari3 ndFibOut5amari4 tdttFib
-- fib(5x+3) -> 5yの検査
typecheck! fibAlphabet fibAlphabet ndFibIn5amari3 ndFibOut5amari0 tdttFib
