-- fibnacci type check
--     fib(3x) -> 2y の検査．

-- 入力3xの判定．
in3x = Bdta (
  {q0,q1,q2},
  {q0},
  {q0},
  {q1 -> a(q0,q0),
   q1 -> a(q0,q0),
   q2 -> a(q1,q0),
   q0 -> a(q2,q0)}
)

-- 入力3x+1の判定．
in3x1 = Bdta (
  {q0,q1,q2},
  {q1},
  {q0},
  {q1 -> a(q0,q0),
   q1 -> a(q0,q0),
   q2 -> a(q1,q0),
   q0 -> a(q2,q0)}
)

-- 入力3x+2の判定．
in3x2 = Bdta (
  {q0,q1,q2},
  {q2},
  {q0},
  {q1 -> a(q0,q0),
   q1 -> a(q0,q0),
   q2 -> a(q1,q0),
   q0 -> a(q2,q0)}
)

-- 出力2yの判定．
outEven = Bdta (
  {q0,q1},
  {q0},
  {q0},
  {q1 -> a(q0,q0),
   q0 -> b(q1,q1),
   q0 -> b(q0,q0),
   q1 -> b(q0,q1),
   q1 -> b(q1,q0)}
)

-- 出力2y+1の判定．
outOdd = Bdta (
  {q0,q1},
  {q1},
  {q0},
  {q1 -> a(q0,q0),
   q0 -> b(q1,q1),
   q0 -> b(q0,q0),
   q1 -> b(q0,q1),
   q1 -> b(q1,q0)}
)

inA = Alphabets {a}
outA = Alphabets {a, b}

-- fibnacci.
-- 入力はaの数，出力は#の数をカウント．
--   fib(0)  = 0,  fib(1)  = 1
--   fib(2)  = 1,  fib(3)  = 2
--   fib(4)  = 3,  fib(5)  = 5
--   fib(6)  = 8,  fib(7)  = 13
--   fib(8)  = 21, fib(9)  = 34
--   fib(10) = 55, fib(11) = 89
fib = Tdtt (
  {fib, aux},
  {fib},
  {fib(a) -> b(fib(1),aux(1)),
   fib(#) -> #,
   aux(a) -> fib(1),
   aux(#) -> a(#,#)}
)

-- fib(3x) -> 2yの検査
typecheck! fib : in3x(inA) -> outEven(outA)
-- fib(3x+1) -> 2yの検査
typecheck! fib : in3x1(inA) -> outEven(outA)
-- fib(3x1+2) -> 2yの検査
typecheck! fib : in3x2(inA) -> outEven(outA)
