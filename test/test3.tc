-- 非決定的なTDTTのテスト

inAs = Alphabets {a0,a1}
outAs = Alphabets {a0,a1,a2}

-- なんでも受理するオートマトン
all = Nd (
  {q0},
  {q0},
  {q0},
  {q0 -> a0(q0,q0),
   q0 -> a1(q0,q0),
   q0 -> a2(q0,q0)}
)

-- a1だけを受理しないオートマトン
nota1 = Nd (
  {q0},
  {q0},
  {q0},
  {q0 -> a0(q0,q0),
   q0 -> a2(q0,q0)}
)

-- a2だけを受理しないオートマトン
nota2 = Nd (
  {q0},
  {q0},
  {q0},
  {q0 -> a0(q0,q0),
   q0 -> a1(q0,q0)}
)

-- a0->{a0,a1}, a1->{a1,a2}にする非決定的なTDTT
maybeInc = Tdtt (
  {inc},
  {inc},
  {inc(a0) -> a0(inc(1),inc(2)),
   inc(a0) -> a1(inc(1),inc(2)),
   inc(a1) -> a1(inc(1),inc(2)),
   inc(a1) -> a2(inc(1),inc(2)),
   inc(#) -> #}
   
)


-- a0,a1,a2の二分木をmaybeIncしたらa2がないか検査
typecheck! inAs outAs all nota2 maybeInc
-- a0,a2の二分木をmaybeIncしたらa2がないか検査
typecheck! inAs outAs nota1 nota2 maybeInc
